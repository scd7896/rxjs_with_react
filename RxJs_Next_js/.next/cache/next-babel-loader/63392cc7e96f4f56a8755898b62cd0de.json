{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../saga\";\nimport reducer from \"../reducer\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Head, null), __jsx(Component, _extends({\n      id: \"wrraper\"\n    }, pageProps)));\n  }\n\n}\n\nconst configureStore = (initialState, option) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === \"production\" ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(MyApp);","map":{"version":3,"sources":["/Users/kimserver/GitHub/TraB/RxJs/RxJs_Next_js/pages/_app.js"],"names":["React","App","Head","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","rootSaga","reducer","MyApp","getInitialProps","Component","ctx","pageProps","query","render","store","props","configureStore","initialState","option","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,KAAN,SAAoBV,GAApB,CAAwB;AACtB,eAAaW,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIAC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBG,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACE,MAAC,IAAD,OADF,EAKE,MAAC,SAAD;AAAW,MAAA,EAAE,EAAC;AAAd,OAA4BH,SAA5B,EALF,CADF;AAUD;;AArBqB;;AAuBxB,MAAMK,cAAc,GAAG,CAACC,YAAD,EAAeC,MAAf,KAA0B;AAC/C,QAAMC,cAAc,GAAGf,oBAAoB,EAA3C;AACA,QAAMgB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GACZC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIvB,OAAO,CAACD,eAAe,CAAC,GAAGoB,WAAJ,CAAhB,CADX,GAEInB,OAAO,CACLD,eAAe,CAAC,GAAGoB,WAAJ,CADV,EAEL,CAACF,MAAM,CAACO,QAAR,IACE,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WADjD,GAEID,MAAM,CAACC,4BAAP,EAFJ,GAGIC,CAAC,IAAIA,CALJ,CAHb;AAUA,QAAMd,KAAK,GAAGZ,WAAW,CAACI,OAAD,EAAUW,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBxB,QAAnB;AACA,SAAOS,KAAP;AACD,CAhBD;;AAiBA,eAAef,SAAS,CAACiB,cAAD,CAAT,CAA0BT,KAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSaga from \"../saga\";\nimport reducer from \"../reducer\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n    \n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <Head>\n        </Head>\n\n        \n        <Component id=\"wrraper\" {...pageProps} />\n        \n      </Provider>\n    );\n  }\n}\nconst configureStore = (initialState, option) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : compose(\n          applyMiddleware(...middlewares),\n          !option.isServer &&\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\n            : f => f\n        );\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport default withRedux(configureStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}