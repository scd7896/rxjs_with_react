{"ast":null,"code":"import { all, delay, fork, takeEvery, takeLatest, call, put, take, throttle } from 'redux-saga/effects';\nimport { LOGIN_USER_REQUEST, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS } from '../action';\nimport axios from 'axios';\n\nconst userLoginApi = async action => {\n  //const res = await axios(\"로그인 api\", {id : action.id, password : action.password})\n  const res = {\n    data: {\n      cookie: 'abcdefg',\n      name: \"대단한 사람\",\n      position: \"운영자... 등등\"\n    }\n  };\n  document.cookie = `thisusertoken=${res.data.cookie}`;\n  return res.data;\n};\n\nfunction* userLogin(action) {\n  try {\n    const result = yield call(userLoginApi, action);\n    yield put({\n      type: LOGIN_USER_SUCCESS,\n      cookie: result.cookie,\n      name: result.name,\n      position: result.position\n    });\n  } catch (err) {\n    yield put({\n      tpye: LOGIN_USER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchUserLogin() {\n  yield throttle(3000, LOGIN_USER_REQUEST, userLogin);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchUserLogin)]);\n}","map":{"version":3,"sources":["/Users/kimserver/GitHub/TraB/RxJs/RxJs_Next_js/saga/user.js"],"names":["all","delay","fork","takeEvery","takeLatest","call","put","take","throttle","LOGIN_USER_REQUEST","LOGIN_USER_FAILURE","LOGIN_USER_SUCCESS","axios","userLoginApi","action","res","data","cookie","name","position","document","userLogin","result","type","err","tpye","error","watchUserLogin","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,KAAb,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAmCC,UAAnC,EAA+CC,IAA/C,EAAoDC,GAApD,EAAwDC,IAAxD,EAA6DC,QAA7D,QAA4E,oBAA5E;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,QAA2E,WAA3E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,YAAY,GAAE,MAAMC,MAAN,IAAe;AAC/B;AACA,QAAMC,GAAG,GAAG;AACRC,IAAAA,IAAI,EAAG;AACHC,MAAAA,MAAM,EAAG,SADN;AAEHC,MAAAA,IAAI,EAAG,QAFJ;AAGHC,MAAAA,QAAQ,EAAG;AAHR;AADC,GAAZ;AAOAC,EAAAA,QAAQ,CAACH,MAAT,GAAmB,iBAAgBF,GAAG,CAACC,IAAJ,CAASC,MAAO,EAAnD;AACA,SAAOF,GAAG,CAACC,IAAX;AACH,CAXD;;AAYA,UAAWK,SAAX,CAAqBP,MAArB,EAA4B;AACxB,MAAG;AACC,UAAMQ,MAAM,GAAG,MAAMjB,IAAI,CAACQ,YAAD,EAAeC,MAAf,CAAzB;AACA,UAAMR,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAGZ,kBADD;AAENM,MAAAA,MAAM,EAAGK,MAAM,CAACL,MAFV;AAGNC,MAAAA,IAAI,EAAGI,MAAM,CAACJ,IAHR;AAINC,MAAAA,QAAQ,EAAGG,MAAM,CAACH;AAJZ,KAAD,CAAT;AAMH,GARD,CAQC,OAAMK,GAAN,EAAU;AACP,UAAMlB,GAAG,CAAC;AACNmB,MAAAA,IAAI,EAAGf,kBADD;AAENgB,MAAAA,KAAK,EAAGF;AAFF,KAAD,CAAT;AAIH;AACJ;;AAED,UAAWG,cAAX,GAA2B;AACnB,QAAMnB,QAAQ,CAAC,IAAD,EAAMC,kBAAN,EAAyBY,SAAzB,CAAd;AACP;;AACD,eAAe,UAAUO,QAAV,GAAoB;AAC/B,QAAM5B,GAAG,CAAC,CACNE,IAAI,CAACyB,cAAD,CADE,CAAD,CAAT;AAIH","sourcesContent":["import {all, delay,fork, takeEvery,takeLatest, call,put,take,throttle} from 'redux-saga/effects'\nimport { LOGIN_USER_REQUEST, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS } from '../action'\nimport axios from 'axios'\nconst userLoginApi= async(action)=>{\n    //const res = await axios(\"로그인 api\", {id : action.id, password : action.password})\n    const res = {\n        data : {\n            cookie : 'abcdefg',\n            name : \"대단한 사람\",\n            position : \"운영자... 등등\"\n        }\n    }\n    document.cookie = `thisusertoken=${res.data.cookie}`\n    return res.data\n}\nfunction * userLogin(action){\n    try{\n        const result = yield call(userLoginApi, action)\n        yield put({\n            type : LOGIN_USER_SUCCESS,\n            cookie : result.cookie,\n            name : result.name,\n            position : result.position\n        })\n    }catch(err){\n        yield put({\n            tpye : LOGIN_USER_FAILURE,\n            error : err\n        })\n    }\n}\n\nfunction * watchUserLogin(){\n        yield throttle(3000,LOGIN_USER_REQUEST,userLogin )\n}\nexport default function* userSaga(){\n    yield all([\n        fork(watchUserLogin)\n\n    ])\n}"]},"metadata":{},"sourceType":"module"}