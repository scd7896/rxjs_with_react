{"version":3,"file":"static/webpack/static/development/pages/_app.js.86852ecc66a018839ce9.hot-update.js","sources":["webpack:///./saga/user.js"],"sourcesContent":["import {all, delay,fork, takeEvery,takeLatest, call,put,take,throttle} from 'redux-saga/effects'\nimport { LOGIN_USER_REQUEST, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS } from '../action'\nimport axios from 'axios'\nconst userLoginApi= async(action)=>{\n    //const res = await axios(\"로그인 api\", {id : action.id, password : action.password})\n    const res = {\n        data : {\n            cookie : 'abcdefg',\n            name : \"대단한 사람\",\n            position : \"운영자... 등등\"\n        }\n    }\n    document.cookie = `thisusertoken=${res.data.cookie}`\n    return res.data\n}\nfunction * userLogin(action){\n    try{\n        const result = yield call(userLoginApi, action)\n        yield put({\n            type : LOGIN_USER_SUCCESS,\n            cookie : result.cookie,\n            name : result.name,\n            position : result.position\n        })\n    }catch(err){\n        yield put({\n            tpye : LOGIN_USER_FAILURE,\n            error : err\n        })\n    }\n}\n\nfunction * watchUserLogin(){\n        yield throttle(3000,LOGIN_USER_REQUEST,userLogin )\n}\nexport default function* userSaga(){\n    yield all([\n        fork(watchUserLogin)\n\n    ])\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAeA;;;AAiBA;;;AAGA;AACA;AApCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}