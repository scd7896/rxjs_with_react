{"version":3,"file":"static/webpack/static/development/pages/index.js.7d513f26032f49e37cf0.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\nimport {Subject, from,interval,fromEvent, of} from 'rxjs'\nimport {multicast, flatMap, map, refCount} from 'rxjs/operators'\nimport { makePublicRouterInstance } from 'next/dist/client/router'\n\nimport Test from '../component/Test'\nconst index = ()=>{\n    const [arr, setArr] = useState([1,2,3,4,5])\n    const firstExample = ()=>{\n        const subject = new Subject()\n        subject.subscribe({\n            next : (v)=> console.log(`observer A ${v}`)\n        })\n        subject.subscribe({\n            next : (v)=> console.log(`observer B ${v}`)\n        })\n        const observable = from([1,2,3])\n        observable.subscribe(subject)\n    }\n    const secondExample = ()=>{\n        const source = interval(500)\n        const subject = new Subject();\n        const multicasted = source.pipe(multicast(subject))\n        let subscription1, subscription2, subscriptionConnect;\n\n        subscription1 = multicasted.subscribe({\n            next : (v)=> console.log(`observarA : ${v}`),\n            complete : ()=> console.log(\"구독종료\"),\n            \n        })\n        subscriptionConnect = multicasted.connect();\n        setTimeout(()=>{\n            subscription2 = multicasted.subscribe({\n                next : (v)=> console.log(`observerB : ${v}`)\n            })\n        },600)\n        setTimeout(()=>{\n            subscription1.unsubscribe()\n        },1200)\n        setTimeout(()=>{\n            subscription2.unsubscribe();\n            subscriptionConnect.unsubscribe();\n        },2000 )\n    }\n    const thirdClick = ()=>{\n        //refCount는 현재 subject에 구독중인 옵저버 숫자를 파악한다.\n        const source = interval(500)\n        const subject= new Subject();\n        const refCounted = source.pipe(multicast(subject), refCount())\n        let subscription1, subscription2;\n\n        console.log('observer A 구독시작');\n        subscription1 = refCounted.subscribe({\n            next : (v)=> console.log(`observer A 카운팅 : ${v}`)\n        })\n        setTimeout(()=>{\n            console.log('observerB 구독시작')\n            subscription2 = refCounted.subscribe({\n                next : (v)=> console.log(`observer B 카운팅 : ${v}`)\n            })\n        }, 600)\n        setTimeout(()=>{\n            console.log('observerA 구독 종료')\n            subscription1.unsubscribe()\n        }, 2000)\n        setTimeout(()=>{\n            console.log('observerB 구독 종료 ')\n            subscription2.unsubscribe()\n        }, 3000)\n    }\n    const mouseOddEvent = (event)=>{\n        if(event.clientX%2!==0){\n            console.log(\"홀수\")\n        }else{\n            console.log(\"짝수\")\n        }\n    }\n    \n    useEffect(()=>{\n        // const mouse = fromEvent(window, 'mousemove').pipe(\n        //     map(el => el)\n        // )\n        // mouse.subscribe({\n        //     next : (v)=> mouseOddEvent(v),\n        //     error : (err)=>console.error(err)\n        // })\n    },[])\n    \n    \n    const mapTest = ()=>{\n        const observable = of(arr).pipe(\n            map(el => <Test el = {el}/>)\n        )\n        observable.subscribe()\n    }\n    const addArr = ()=>{\n        setArr([...arr, 6])\n    }\n    return(\n        <div>\n            <button onClick = {firstExample}>처음 예제</button>\n            <button onClick = {secondExample}>두번째 예제</button>\n            <button onClick = {thirdClick}>세번째 예제</button>\n            {\n                mapTest()\n            }\n\n            <button onClick = {addArr}>배열늘려버리기</button>\n            <Test el = {3}/>\n        </div>\n    )\n}\n\nindex.getInitialProps = async(context)=>{\n    console.log(context.store)\n    return {}\n}\n\nexport default index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}